# This is a basic workflow to help you get started with Actions

name: CI
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains two jobs "build" and "bluesky"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install aspell aspell-es

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v4

      - name: Maximum line length
        run: |
          awk '{ if (length($0) > 72) { print FILENAME " " FNR; exit 255 } }' CPEUM/[T0-9]*.rst

      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

        # Runs a single command using the runners shell
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install -r requirements.txt

      - name: Check spelling
        run: |
          python -m pyspelling -n ortografia

      - name: Check reStructuredText syntax
        run: |
          python -m rstcheck -r CPEUM/

      # Runs a set of commands using the runners shell
      - name: Generate document
        run: |
          mkdir html
          cd CPEUM
          rst2html5 toc.rst ../html/index.html

      # Install generated document in Pages
      - name: Deploy to GitHub Pages
        if: success() && github.ref == 'refs/heads/main'
        uses: crazy-max/ghaction-github-pages@v4
        with:
          target_branch: gh-pages
          build_dir: html
          keep_history: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  bluesky:

    needs: build

    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main'

    environment:
      name: BlueSky

    steps:

      # - name: Dump pull_request
      #   env:
      #     GITHUB_CONTEXT: ${{ toJson(github) }}
      #   run: echo "$GITHUB_CONTEXT"

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.after }}

      - name: Check if last commit in PR contains document changes
        env:
          SHA: ${{ github.event.after }}
        run: |
          git show --name-only --oneline "$SHA" | head -1 | grep -i -e "artÃ­culo" -e "articulo"
          git show --name-only --oneline "$SHA" | tail -n +2 | grep "^CPEUM/.*\.rst$"

      - name: Extract second paragraph of commit log if previous step was successful
        if: success()
        id: desc
        env:
          SHA: ${{ github.event.after }}
        run: |
          git show --summary --format=%B "$SHA" | awk -v RS='(\r?\n){2,}' 'NR == 2 { print "desc=" $RS }' | sed ':a;N;$!ba;s/\n/ /g' >> "$GITHUB_OUTPUT"

      # Announce merge of the pull request in BlueSky
      - name: Post in BlueSky
        #if: success()
        uses: zentered/bluesky-post-action@v0.2.0
        with:
          post: |
            ${{ steps.desc.outputs.desc }}

            ${{ github.event.pull_request._links.html.href }}
        env:
          BSKY_IDENTIFIER: ${{ secrets.BSKY_IDENTIFIER }}
          BSKY_PASSWORD: ${{ secrets.BSKY_PASSWORD }}
